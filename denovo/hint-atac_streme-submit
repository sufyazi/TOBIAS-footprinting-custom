#!/usr/bin/env bash

gathered_input_root=$1
dataset_rec=$2
run_num=$3

# Set union peak file path
master_peak="/home/suffi.azizan/scratchspace/outputs/hint-atac/merged_sample-specific_peaks"

echo "Gathered input root: $gathered_input_root"
echo "Dataset record: $dataset_rec"
echo "Run number: $run_num"

# Declare an associative array to store the dataset and experiment type pairs
declare -A dataset_dict

# Read the dataset record file and populate the associative array
while read -r dataset experiment; do
    dataset_dict["$dataset"]="$experiment"
done < "$dataset_rec"

# Print the dataset and experiment type pairs
for dataset in "${!dataset_dict[@]}"; do
    # get the path of the dataset in the gathered_input_root
    dataset_path=$(find "${gathered_input_root}" -maxdepth 1 -mindepth 1 -type d -name "${dataset}")
	# check if the dataset path is empty; if it is empty, skip
	if [ -z "${dataset_path}" ]; then
        echo "Dataset ${dataset} does not exist in input path. Skipping..."
		continue
	fi
    # assign the experiment type to a variable
    experiment_type="${dataset_dict[$dataset]}"
    echo "Dataset: $dataset Experiment Type: $experiment_type"

    # iterate through each sample
	for sample_dir in "${dataset_path}"/*; do
		# check if the file is a directory; if it is NOT a directory, skip
		if [ ! -d "${sample_dir}" ]; then
			continue
		else
            # get the sample name
			sample_name=$(basename "${sample_dir}")
            echo "Sample name: $sample_name"

            # find the merged peak file (sample-specific)
            merged_peak_file=$(find "${master_peak}" -type f -name "${dataset}_${sample_name}_*.bed")
            if [ -z "${merged_peak_file}" ]; then
                echo "Merged peak file for ${dataset}_${sample_name} does not exist. Skipping..."
                continue
            else
                echo "Merged peak file: $merged_peak_file"
            fi

            # find input files and assign to variables
            # find the bam file
            readarray -t bam_files < <(find "${sample_dir}" -type f \( -name "*.trim.srt.nodup.no_chrM_MT.bam" -o -name "*.nodup.no_chrM_MT.bam" -o -name "*.rep-merged.bam" \))
            # check if the length of the bam_files array is more than 1; if yes, then filter for the one named .rep-merged.bam
            if [[ "${#bam_files[@]}" -gt 1 ]]; then
                bam=$(find "${sample_dir}" -type f -name "*.rep-merged.bam")
            else
                bam="${bam_files[0]}"
            fi
            echo "Bam file: $bam"
            # create the output directory
            mkdir -p "/home/suffi.azizan/scratchspace/outputs/hint-atac/hint-atac-outputs/RUN-${run_num}/${dataset}_${sample_name}"

            out_prefix="${dataset}_${sample_name}_${experiment_type}_RUN-${run_num}"

            # run the script
            qsub -v OUT_PREF="${out_prefix}",FILE="$bam",MERGED_PEAKS="$merged_peak_file" /home/suffi.azizan/scratchspace/pipeline_scripts/footprinting-workflow-scripts/denovo/hint-atac_streme-main.pbs
        fi
    done
done