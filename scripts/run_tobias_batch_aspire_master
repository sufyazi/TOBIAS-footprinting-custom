#!/usr/bin/env bash
# shellcheck disable=SC1091
# shellcheck disable=SC2153

gathered_input_root=$1
dataset_rec=$2
run_num=$3

# Set cores
CORE=64

# Set union peak file path
MASTER_PEAK="/home/users/ntu/suffiazi/tobias_input_peaks/master_merged_peakset/ALL_master_merged_peakset.bed"

echo "Gathered input root: $gathered_input_root"
echo "Dataset record: $dataset_rec"
echo "Run number: $run_num"

# Declare an associative array to store the dataset and experiment type pairs
declare -A dataset_dict

# Read the dataset record file and populate the associative array
while read -r dataset experiment; do
    dataset_dict["$dataset"]="$experiment"
done < "$dataset_rec"

# Print the dataset and experiment type pairs
for dataset in "${!dataset_dict[@]}"; do
    # get the path of the dataset in the gathered_input_root
    dataset_path=$(find "${gathered_input_root}" -maxdepth 1 -mindepth 1 -type d -name "${dataset}")
	# check if the dataset path is empty; if it is empty, skip
	if [ -z "${dataset_path}" ]; then
        echo "Dataset ${dataset} does not exist in input path. Skipping..."
		continue
	fi
    # assign the experiment type to a variable
    experiment_type="${dataset_dict[$dataset]}"
    echo "Dataset: $dataset Experiment Type: $experiment_type"

    # iterate through each sample
	for sample_dir in "${dataset_path}"/*; do
		# check if the file is a directory; if it is NOT a directory, skip
		if [ ! -d "${sample_dir}" ]; then
			continue
		else
            # get the sample name
			sample_name=$(basename "${sample_dir}")
            echo "Sample name: $sample_name"

            # find input files and assign to variables
            # find the bam file
            readarray -t bam_files < <(find "${sample_dir}" -type f \( -name "*.trim.srt.nodup.no_chrM_MT.bam" -o -name "*.nodup.no_chrM_MT.bam" -o -name "*.rep-merged.bam" \))
            # check if the length of the bam_files array is more than 1; if yes, then filter for the one named .rep-merged.bam
            if [[ "${#bam_files[@]}" -gt 1 ]]; then
                bam=$(find "${sample_dir}" -type f -name "*.rep-merged.bam")
            else
                bam="${bam_files[0]}"
            fi
            echo "Bam file: $bam"
            # create the output directory
            mkdir -p "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}"
        fi

        # check if the experiment type is DNase-seq
        if [[ "$experiment_type" == "dnaseseq" ]]; then
            # run bias correction
            echo "Running bias correction for ${dataset}_${sample_name}"
            if TOBIAS ATACorrect -b "$bam" -g /home/users/ntu/suffiazi/genomes/GRCh38_no_alt_GCA_000001405.15.fasta -p "${MASTER_PEAK}" --blacklist /home/users/ntu/suffiazi/genomes/hg38-blacklist.v2.bed --read_shift 0 0 --k_flank 6 --outdir "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}" --prefix "${dataset}_${sample_name}" --cores $CORE >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/${dataset}_${sample_name}_${experiment_type}-${CORE}cores-aspire-${run_num}-master.log"; then
                echo "Bias correction has been completed for ${dataset}_${sample_name}. Proceeding with footprinting."
            else
                echo "Bias correction has failed for ${dataset}_${sample_name}. Please check the log file for more details."
                continue
            fi
        elif [[ "$experiment_type" == "atacseq" ]]; then
            # run bias correction
            echo "Running bias correction for ${dataset}_${sample_name}"
            if TOBIAS ATACorrect -b "$bam" -g /home/users/ntu/suffiazi/genomes/GRCh38_no_alt_GCA_000001405.15.fasta -p "${MASTER_PEAK}" --blacklist /home/users/ntu/suffiazi/genomes/hg38-blacklist.v2.bed --outdir "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}" --prefix "${dataset}_${sample_name}" --cores $CORE >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/${dataset}_${sample_name}_${experiment_type}-${CORE}cores-aspire-${run_num}-master.log"; then
                echo "Bias correction has been completed for ${dataset}_${sample_name}. Proceeding with footprinting."
            else
                echo "Bias correction has failed for ${dataset}_${sample_name}. Please check the log file for more details."
                continue
            fi
        fi

        FILELIMIT=$(ulimit -n)
        echo "Current file descriptor limit: " "$FILELIMIT"

        # run TOBIAS footprinting
        # score bigwigs
        echo "Scoring bigwigs for ${dataset}_${sample_name} and calling footprints..."
        if TOBIAS ScoreBigwig --signal "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}/${dataset}_${sample_name}_corrected.bw" --regions "${MASTER_PEAK}" --output "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}/${dataset}_${sample_name}_footprints.bw" --cores $CORE >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/${dataset}_${sample_name}_${experiment_type}-${CORE}cores-aspire-${run_num}-master.log" && \
        # call footprints
        TOBIAS BINDetect --motifs /home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/motif-guided/joined_filt_combined_motifs.jaspar --signals "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}/${dataset}_${sample_name}_footprints.bw" --genome /home/users/ntu/suffiazi/genomes/GRCh38_no_alt_GCA_000001405.15.fasta --peaks "${MASTER_PEAK}" --outdir "/home/users/ntu/suffiazi/scratch/outputs/tobias-outs/RUN-${run_num}-master/${dataset}_${sample_name}/bindetect_outputs" --skip-excel --cores $CORE >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/${dataset}_${sample_name}_${experiment_type}-${CORE}cores-aspire-${run_num}.log"; then
            echo "Successfully ran TOBIAS footprinting for ${dataset}_${sample_name}."
        else
            echo "Failed to run TOBIAS footprinting for ${dataset}_${sample_name} due to an error. Please see the log file for more details."
        fi
    done
done

echo "All done! Check the log files for any errors and the outputs directory for the results."
