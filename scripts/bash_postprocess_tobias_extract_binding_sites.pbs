#!/usr/bin/env bash
# This script is used to run the job on the NSCC cluster.

#PBS -N transfer-tobias-output
#PBS -l select=1:ncpus=24:mem=120GB
#PBS -l walltime=10:00:00
#PBS -j oe
#PBS -P personal
#PBS -q normal

filtered_root=$FILT_ROOT

# loop through the array for each unique sample subdirectory in the filtered_root directory
for sample in "${filtered_root}"/*; do
    echo "Current sample directory: ${sample}"
    # get the path of the sample directory
    readarray -t sample_dir < <(find "${tobias_out_root}/${run}" -maxdepth 1 -mindepth 1 -type d -name "*sample*")

    # check if the sample directory is empty; if it is empty, skip
    if [ -z "${sample_dir[0]}" ]; then
        echo "Sample directory is non-existent in the ${run} directory. Skipping..."
        continue
    else
        # check elements in the array
        # print the first element
        echo "Sample directory count: " "${#sample_dir[@]}"
        # loop through the rest of the elements in the array
        for ((i=0; i<${#sample_dir[@]}; i++)); do
            echo "Sample directory $((i+1)): " "${sample_dir[i]}"
            # get the basename of the sample directory
            sample_dir_name=$(basename "${sample_dir[i]}")
            # get the analysis ID from the basename
            analysis_id=$(echo "${sample_dir_name}" | cut -d'_' -f1)
            # get the sample ID from the basename
            sample_id=$(echo "${sample_dir_name}" | cut -d'_' -f2)
            echo "Analysis ID: ${analysis_id}" "Sample ID: ${sample_id}"
            # find specific files in the sample directory and put them in an array
            readarray -t files < <(find "${sample_dir[i]}" -type f \( -name "*_corrected.bw" -o -name "*_footprints.bw" -o -name "*_overview.txt" -o -name "bindetect_results.txt" \))
            # create copy directory
            mkdir -p /home/users/ntu/suffiazi/scratch/outputs/filtered-tobias/"${analysis_id}"/"${analysis_id}"_"${sample_id}"/
            for file in "${files[@]}"; do
                echo "File: ${file}"
                if [[ "$file" == *_overview.txt ]]; then
                    if rsync -avPhz "${file}" /home/users/ntu/suffiazi/scratch/outputs/filtered-tobias/"${analysis_id}"/"${analysis_id}"_"${sample_id}"/overview_files/ >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/rsync-transfer/rsync_log_${analysis_id}_${sample_id}.log"; then
                        echo "$file has been copied to a new location."
                    else
                        echo "File failed to be copied! Check logs."
                    fi
                else
                    if rsync -avPhz "${file}" /home/users/ntu/suffiazi/scratch/outputs/filtered-tobias/"${analysis_id}"/"${analysis_id}"_"${sample_id}"/ >> "/home/users/ntu/suffiazi/scripts/footprinting-workflow-scripts/logfiles/rsync-transfer/rsync_log_${analysis_id}_${sample_id}.log"; then
                        echo "$file has been copied to a new location."
                    else
                        echo "File failed to be copied! Check logs."
                    fi
                fi
            done
        done
    fi
done

echo "Transfer done!"